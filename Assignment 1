ed = 10^-4; %given relative roughness value, epsilon/d
c = 0;
r = 0;%for storing Re array from 10^4-10^7
i = 1;%iteration variable declaration
while r < 10^7 %Loop exit condition
Re(i) = 10^4 + c; %Reynold's number array
y(i) = NR(Re(i),ed); %Array for storing the friction factor value
obtained from the NR() function
c = c + 100000; %for creating intervals between 10^4-10^7
r = Re(i); %Storing the reynold's number from each loop
i = i+1; %iteration
end
loglog(Re,y) %to obtain loglog plot of friction factor vs Re
xlabel('Reynolds number')
ylabel('friction factor')
title('log(f) vs log(Re)')

function xold = NR(Re, ed) %function declaration, the function returns
xold=frictionfactor
x0 = 0.01; %initial guess, for other initial guess fail at higher order of
Reynold's number
maxIter = 100; %iteration required for convergence
x = x0;
xold = x0;
for i = 1 : maxIter %iteration start
f = x^-(1/2) + 0.86*log((ed / 3.7)+(2.51/Re)*(x^-(1/2))); %function
declaration, colebrook equation
df1 = (x^(1/2)*((-0.5*ed*Re)-3.99341)-
4.6435)/((ed*Re*(x^2))+(9.287*(x^(3/2)))); %derivative of the function f
x = x - f/df1; %Newton Raphson solver
err = abs (x-xold); %Calculate the difference between the x(i) and x(i+1)
xold = x; %to store the x(i+1) value for the next iteration
if( err<eps) %tolerance limit, if the differnce between x(i) and x(i+1) <
machine epsilon, the loop will end
break;
end
end
end
